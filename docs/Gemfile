---
layout: default
title: Home
---

<div class="home-container">
  <div class="profile-section">
    <img src="../images/profile_pic.png" alt="Profile Picture" class="profile-image">
  </div>
  <div class="content-section">
    <h1>Welcome</h1>
    <p class="intro-text">
      I am a Machine Learning Engineer with over 7 years of experience. I have worked in many projects for companies, early start-up and individuals that wanted to pursue data to grow their business. I am currently an independent consultant helping business in AI solutions.
    </p>
  </div>
</div>

<style>
.home-container {
  display: flex;
  align-items: center;
  gap: 2rem;
  max-width: 1200px;
  margin: 2rem auto;
  padding: 2rem;
}

.profile-section {
  flex: 0 0 300px;
}

.profile-image {
  width: 100%;
  max-width: 300px;
  height: auto;
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

.content-section {
  flex: 1;
  padding-left: 2rem;
}

.content-section h1 {
  color: #333;
  font-size: 2.5rem;
  margin-bottom: 1rem;
  font-weight: 600;
}

.intro-text {
  font-size: 1.2rem;
  line-height: 1.6;
  color: #555;
  margin: 0;
}

/* Responsive design */
@media (max-width: 768px) {
  .home-container {
    flex-direction: column;
    text-align: center;
    padding: 1rem;
  }
  
  .profile-section {
    flex: none;
  }
  
  .content-section {
    padding-left: 0;
    padding-top: 1rem;
  }
  
  .content-section h1 {
    font-size: 2rem;
  }
  
  .intro-text {
    font-size: 1.1rem;
  }
}
</style>
```

Now I'll create a `_config.yml` file to configure GitHub Pages with Jekyll:

```yaml:docs/_config.yml
title: Machine Learning Engineer
description: Independent AI Consultant with 7+ years of experience
url: "https://yourusername.github.io"
baseurl: "/blog"

# GitHub Pages settings
source: docs
plugins:
  - jekyll-feed
  - jekyll-sitemap

# Theme settings
theme: minima

# Markdown settings
markdown: kramdown
highlighter: rouge

# Exclude files from processing
exclude:
  - README.md
  - Gemfile
  - Gemfile.lock
  - node_modules
  - vendor
```

I'll also create a default layout template to ensure consistent styling:

```html:docs/_layouts/default.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% if page.title %}{{ page.title }} - {% endif %}{{ site.title }}</title>
    <meta name="description" content="{{ site.description }}">
    
    <!-- Basic styling -->
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
            line-height: 1.6;
            color: #333;
            background-color: #fff;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 1rem;
        }
        
        header {
            background-color: #f8f9fa;
            padding: 1rem 0;
            border-bottom: 1px solid #e9ecef;
        }
        
        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .logo {
            font-size: 1.5rem;
            font-weight: bold;
            color: #333;
            text-decoration: none;
        }
        
        nav ul {
            list-style: none;
            display: flex;
            gap: 2rem;
        }
        
        nav a {
            color: #333;
            text-decoration: none;
            font-weight: 500;
        }
        
        nav a:hover {
            color: #007bff;
        }
        
        main {
            min-height: calc(100vh - 140px);
            padding: 2rem 0;
        }
        
        footer {
            background-color: #f8f9fa;
            padding: 1rem 0;
            border-top: 1px solid #e9ecef;
            text-align: center;
            color: #666;
        }
    </style>
</head>
<body>
    <header>
        <div class="container">
            <div class="header-content">
                <a href="{{ '/' | relative_url }}" class="logo">{{ site.title }}</a>
                <nav>
                    <ul>
                        <li><a href="{{ '/' | relative_url }}">Home</a></li>
                        <li><a href="{{ '/about' | relative_url }}">About</a></li>
                        <li><a href="{{ '/contact' | relative_url }}">Contact</a></li>
                    </ul>
                </nav>
            </div>
        </div>
    </header>

    <main>
        <div class="container">
            {{ content }}
        </div>
    </main>

    <footer>
        <div class="container">
            <p>&copy; {{ 'now' | date: "%Y" }} {{ site.title }}. All rights reserved.</p>
        </div>
    </footer>
</body>
</html>
```

Now I'll create a GitHub Actions workflow file to ensure proper deployment:

```yaml:docs/.github/workflows/pages.yml
name: Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1'
        
    - name: Install dependencies
      run: |
        cd docs
        gem install bundler
        bundle install
        
    - name: Build site
      run: |
        cd docs
        bundle exec jekyll build
        
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/_site
```

Let me also create a Gemfile for Jekyll dependencies:

```ruby:docs/Gemfile
source "https://rubygems.org"

gem "jekyll", "~> 4.3"
gem "minima", "~> 2.5"

group :jekyll_plugins do
  gem "jekyll-feed", "~> 0.12"
  gem "jekyll-sitemap", "~> 1.4"
end

# Windows and JRuby does not include zoneinfo files, so bundle the tzinfo-data gem
# and associated library.
platforms :mingw, :x64_mingw, :mswin, :jruby do
  gem "tzinfo", ">= 1", "< 3"
  gem "tzinfo-data"
end

# Performance-booster for watching directories on Windows
gem "wdm", "~> 0.1.1", :platforms => [:mingw, :x64_mingw, :mswin]

# Lock `http_parser.rb` gem to `v0.6.x` on JRuby builds since newer versions of the gem
# do not have a Java counterpart.
gem "http_parser.rb", "~> 0.6.0", :platforms => [:jruby]
```

Finally, let me create a simple README with deployment instructions:

```markdown:README.md
# Machine Learning Engineer Portfolio

A professional portfolio website showcasing Machine Learning expertise and consulting services.

## Features

- Professional introduction with profile image
- Responsive design that works on all devices
- Clean, modern layout
- Optimized for GitHub Pages deployment

## Deployment Instructions

### GitHub Pages Setup

1. **Enable GitHub Pages:**
   - Go to your repository settings on GitHub
   - Scroll down to "Pages" section
   - Under "Source", select "Deploy from a branch"
   - Choose "main" branch and "/docs" folder
   - Click "Save"

2. **Configure Repository:**
   - Make sure your repository is public (or you have GitHub Pro for private repos)
   - Update the `url` and `baseurl` in `docs/_config.yml` with your actual GitHub username and repository name

3. **Automatic Deployment:**
   - The site will automatically rebuild and deploy when you push changes to the main branch
   - Your site will be available at: `https://yourusername.github.io/repositoryname`

### Local Development

To run the site locally:

```bash
cd docs
bundle install
bundle exec jekyll serve
```

Then visit `http://localhost:4000` in your browser.

## Customization

- Update the profile image by replacing `images/profile_pic.png`
- Modify the introduction text in `docs/index.md`
- Customize colors and styling in the CSS sections
- Add more pages by creating new `.md` files in the `docs/` directory

## Structure

```
├── docs/               # GitHub Pages source directory
│   ├── _config.yml    # Jekyll configuration
│   ├── _layouts/      # Page templates
│   ├── index.md       # Homepage content
│   └── Gemfile        # Ruby dependencies
├── images/            # Image assets
│   └── profile_pic.png
└── README.md          # This file
```
```

## Summary

I've created a complete professional front page for your website with the following features:

1. **Professional Layout**: Your image on the left, description on the right
2. **Responsive Design**: Adapts to mobile devices by stacking elements vertically
3. **GitHub Pages Ready**: Complete Jekyll setup with all necessary configuration files
4. **Clean Styling**: Modern, professional appearance with proper typography

### To deploy this to GitHub Pages:

1. **Push these changes** to your GitHub repository
2. **Go to your repository settings** on GitHub
3. **Navigate to the "Pages" section**
4. **Select "Deploy from a branch"**
5. **Choose "main" branch and "/docs" folder**
6. **Click "Save"**

Your site will be available at `https://yourusername.github.io/blog` (replace "yourusername" with your actual GitHub username).

The site will automatically update whenever you push changes to the main branch. The profile picture from your `images/` directory will be displayed prominently alongside your professional description.
